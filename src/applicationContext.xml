<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<context:annotation-config />


	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/db_bookmanage?useUnicode=true&amp;characterEncoding=UTF-8"/>
		<property name="user" value="root"/>
		<property name="password" value="123456"/>
	</bean>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>com/library/model/Book.hbm.xml</value>
				<value>com/library/model/Stu.hbm.xml</value>
				<value>com/library/model/LendBook.hbm.xml</value></list>
		</property></bean>
		

		
		
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		  <tx:attributes>
<!-- 		  	tx:method为某个或某些（name属性可使用通配符）指定方法的5种事务属性; rollback-for属性用于设置事务回滚的异常，若有多个，则用逗号隔开 -->
		    <tx:method name="get*" read-only="true" />
		    <tx:method name="*" propagation="REQUIRED" timeout="5" read-only="false"/>
		  </tx:attributes>
	</tx:advice>
		
		
<!-- 	使用基于XML方式配置事务  -->
	<aop:config proxy-target-class="true">
<!-- 		 aop:pointcut:使用切入点表达式定义切入点 -->
	  	<aop:pointcut id="transactionPointcut" expression="execution(* com.library.service..*.*(..))"/>
<!-- 	  	aop:advisor：用于指定哪些Bean应该被通知 -->
	  	<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointcut"/>
	</aop:config>
	


	
	
<!-- 	管理员增删改查图书的spring -->
	<bean id="bookdao" class="com.library.dao.AdminBookDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="bookservice" class="com.library.service.AdminBookServiceImpl">
		<property name="bookdao" ref="bookdao"/>
	</bean>
	
<!-- 管理员增删改查用户的spring -->
	<bean id="studao" class="com.library.dao.AdminStuDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="stuservice" class="com.library.service.AdminStuServiceImpl">
		<property name="studao" ref="studao"/>
	</bean>

<!-- 	用户借书的spring -->
	<bean id="lendbookdao" class="com.library.dao.AdminLendBookDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="lendbookservice" class="com.library.service.AdminLendBookServiceImpl">
		<property name="lendbookdao" ref="lendbookdao"/>
	</bean>


	
<!-- 	管理员登陆的spring -->
	<bean id="loginservice" class="com.library.service.AdminLoginServiceImpl" />
<!-- 	管理员模块的action -->
	<bean id="AdminSpring" class="com.library.action.AdminAction"  scope="prototype">
	
		<property name="bookservice" ref="bookservice"/>
		<property name="stuservice" ref="stuservice"/>
		<property name="loginservice" ref="loginservice"/>
		<property name="lendbookservice" ref="lendbookservice"/>
<!-- 		IOC AOP -->
	</bean>
	







	
	<!-- Tool -->
	<bean id="sms" class="com.library.tool.Sms"></bean>
<!-- Dao -->
	<bean id="userDao" class="com.library.dao.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="userBookDao" class="com.library.dao.UserBookDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
<!-- Service -->
	<bean id="userService" class="com.library.service.UserServiceImpl" >
		<property name="userDao" ref="userDao"/>
		<property name="sms" ref="sms"/>
	</bean>
	<bean id="userBookService" class="com.library.service.UserBookServiceImpl" >
		<property name="userBookDao" ref="userBookDao"/>
	</bean>
<!-- Action -->
	<bean id="userSpring" class="com.library.action.UserAction" scope="prototype">
		<property name="userService" ref="userService"/>
	</bean>
	<bean id="userBookSpring" class="com.library.action.UserBookAction" scope="prototype">
		<property name="userBookService" ref="userBookService"/>
	</bean>
	

	
	
	
	</beans>